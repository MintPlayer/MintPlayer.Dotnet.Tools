<Project Sdk="Microsoft.NET.Sdk">

	<PropertyGroup>
		<TargetFrameworks>net6.0</TargetFrameworks>
		<Description>
			Extended version of System.Collections.ObjectModel.ObservableCollection. This class allows you to:
			1) Use AddRange, invoking the CollectionChanged event only once
			2) Use RemoveRange, invoking the CollectionChanged event only once
			3) Monitor properties of the items in the collection
			4) Add/Remove/Replace items from another thread
			5) Support for WPF
		</Description>
		<Company>MintPlayer</Company>
		<Authors>Pieterjan De Clippel</Authors>
		<PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
		<PackageProjectUrl>https://github.com/MintPlayer/MintPlayer.ObservableCollection</PackageProjectUrl>
		<RepositoryUrl>https://github.com/MintPlayer/MintPlayer.ObservableCollection</RepositoryUrl>
		<RepositoryType>Git</RepositoryType>
		<PackageTags>ObservableCollection, AddRange, RemoveRange, ItemPropertyChanged</PackageTags>
		<PackageId>MintPlayer.ObservableCollection</PackageId>
		<IncludeSymbols>true</IncludeSymbols>
		<SymbolPackageFormat>snupkg</SymbolPackageFormat>
		<Product>MintPlayer.ObservableCollection</Product>
		<Version>6.0.2</Version>
	</PropertyGroup>

	<Target Name="PreparePackageReleaseNotesFromFile" BeforeTargets="GenerateNuspec">
		<ReadLinesFromFile File="./RELEASE-NOTES.txt">
			<Output TaskParameter="Lines" ItemName="ReleaseNoteLines" />
		</ReadLinesFromFile>
		<PropertyGroup>
			<PackageReleaseNotes>@(ReleaseNoteLines, '%0a')</PackageReleaseNotes>
		</PropertyGroup>
	</Target>

	<ItemGroup>
	  <PackageReference Include="Microsoft.SourceLink.GitHub" Version="1.1.1">
	    <PrivateAssets>all</PrivateAssets>
	    <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
	  </PackageReference>
	</ItemGroup>

</Project>
